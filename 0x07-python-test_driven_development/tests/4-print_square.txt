============================
The ``4-print_square`` module
============================


Using ``print_square``
-----------------------------

First import ``print_square`` from the ``4-print_square`` module:

    >>> print_square = __import__("4-print_square").print_square

Simple cases:
============================

size = 4
-----------------------------
    >>> print_square(4)
    ####
    ####
    ####
    ####

size = 1
-----------------------------
    >>> print_square(1)
    #

size = 0
-----------------------------
    >>> print_square(0)
    <BLANKLINE>

TypeError cases:
============================

size float (must be integer)
-----------------------------
    >>> print_square(3.14)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

negative float size  (must be integer)
-----------------------------
    >>> print_square(-0.6)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

None size (must be integer)
-----------------------------
    >>> print_square(None)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

float("nan") size (must be integer)
-----------------------------
    >>> print_square(float("nan"))
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

negative integer size (must be integer greater than 0)
-----------------------------
    >>> print_square(-10)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

Other cases (maybe noy necesary):
============================

Nothin in the argument (must be integer)
-----------------------------
    >>> print_square()
    Traceback (most recent call last):
    ...
    TypeError: print_square() missing 1 required positional argument: 'size'


NaN size (must be integer)
-----------------------------
    >>> print_square(NaN)
    Traceback (most recent call last):
    ...
    NameError: name 'NaN' is not defined


